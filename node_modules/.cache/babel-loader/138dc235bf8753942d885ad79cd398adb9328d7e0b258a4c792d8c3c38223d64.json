{"ast":null,"code":"var _jsxFileName = \"/home/ianclarke/iancode/webdev/Assignment-3-Bank-of-React/src/components/Credits.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Credits = _ref => {\n  _s();\n\n  let {\n    addCredit,\n    accountBalance\n  } = _ref;\n  const [newCreditDescription, setNewCreditDescription] = useState('');\n  const [newCreditAmount, setNewCreditAmount] = useState('');\n  const [credits, setCredits] = useState([]);\n  useEffect(() => {\n    fetch('https://johnnylaicode.github.io/api/credits.json').then(response => response.json()).then(data => {\n      setCredits(data);\n    }).catch(error => console.error('Error fetching credits:', error));\n  }, []);\n\n  const handleAddCredit = event => {\n    event.preventDefault();\n\n    if (!newCreditDescription || !newCreditAmount) {\n      alert('Please enter both description and amount for the credit.');\n      return;\n    }\n\n    addCredit(newCreditDescription, parseFloat(newCreditAmount)); //update state\n\n    setCredits([...credits, {\n      description: newCreditDescription,\n      amount: parseFloat(newCreditAmount),\n      date: new Date().toISOString().slice(0, 10)\n    }]);\n    setNewCreditDescription('');\n    setNewCreditAmount('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Credits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddCredit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newCreditDescription,\n          onChange: e => setNewCreditDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newCreditAmount,\n          onChange: e => setNewCreditAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Credit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Credits List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: credits.map((credit, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), \" \", credit.description, \", \\xA0\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), \" $\", credit.amount.toFixed(2), \", \\xA0\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), \" \", credit.date]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Account Balance:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), \" $\", accountBalance.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Return to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Credits, \"nNBqVvSFAsaCfTsp+LhN/CKz1i4=\");\n\n_c = Credits;\nexport default Credits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Credits\");","map":{"version":3,"sources":["/home/ianclarke/iancode/webdev/Assignment-3-Bank-of-React/src/components/Credits.js"],"names":["React","useState","useEffect","Link","Credits","addCredit","accountBalance","newCreditDescription","setNewCreditDescription","newCreditAmount","setNewCreditAmount","credits","setCredits","fetch","then","response","json","data","catch","error","console","handleAddCredit","event","preventDefault","alert","parseFloat","description","amount","date","Date","toISOString","slice","e","target","value","map","credit","index","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Credits = ({ addCredit, accountBalance }) => {\n  const [newCreditDescription, setNewCreditDescription] = useState('');\n  const [newCreditAmount, setNewCreditAmount] = useState('');\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    fetch('https://johnnylaicode.github.io/api/credits.json')\n      .then((response) => response.json())\n      .then((data) => {\n        setCredits(data);\n      })\n      .catch((error) => console.error('Error fetching credits:', error));\n  }, []);\n\n  const handleAddCredit = (event) => {\n    event.preventDefault();\n\n    if (!newCreditDescription || !newCreditAmount) {\n      alert('Please enter both description and amount for the credit.');\n      return;\n    }\n    addCredit(newCreditDescription, parseFloat(newCreditAmount));\n\n    //update state\n    setCredits([\n      ...credits,\n      {\n        description: newCreditDescription,\n        amount: parseFloat(newCreditAmount),\n        date: new Date().toISOString().slice(0, 10)\n      }\n    ]);\n\n    setNewCreditDescription('');\n    setNewCreditAmount('');\n  };\n\n  return (\n    <div>\n      <h1>Credits</h1>\n      <form onSubmit={handleAddCredit}>\n        <label>\n          Description:\n          <input\n            type=\"text\"\n            value={newCreditDescription}\n            onChange={(e) => setNewCreditDescription(e.target.value)}\n          />\n        </label>\n        <label>\n          Amount:\n          <input\n            type=\"number\"\n            value={newCreditAmount}\n            onChange={(e) => setNewCreditAmount(e.target.value)}\n          />\n        </label>\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br />\n      <h2>Credits List</h2>\n      <ul>\n        {credits.map((credit, index) => (\n          <li key={index}>\n            <strong>Description:</strong> {credit.description}, &nbsp;\n            <strong>Amount:</strong> ${credit.amount.toFixed(2)}, &nbsp;\n            <strong>Date:</strong> {credit.date}\n          </li>\n        ))}\n      </ul>\n      <div>\n        <strong>Account Balance:</strong> ${accountBalance.toFixed(2)}\n      </div>\n      <div>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Credits;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}